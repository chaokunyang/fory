# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Publish Fory

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read

jobs:
  build-wheels-linux:
    name: Build Wheels on Linux for Python
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        config:
          - {os: ubuntu-latest, target: "x86_64", image: "quay.io/pypa/manylinux1_x86_64", plat: "manylinux1_x86_64"}
          - {os: ubuntu-latest, target: "x86_64", image: "quay.io/pypa/manylinux2014_x86_64", plat: "manylinux_2_17_x86_64"}
          - {os: ubuntu-latest, target: "x86_64", image: "quay.io/pypa/manylinux_2_28_x86_64", plat: "manylinux_2_28_x86_64"}
          - {os: ubuntu-latest, target: "aarch64", image: "quay.io/pypa/manylinux_2_28_aarch64", plat: "manylinux_2_28_aarch64"}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Update version in setup.py
        shell: bash
        run: ci/deploy.sh bump_py_version
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
      - name: Build a binary wheel (Linux)
        shell: bash
        run: |
           DOCKER_IMAGE="${{ matrix.config.image }}"
           PLAT="${{ matrix.config.plat }}"
           PY_VERSION=${{ matrix.python-version }}
           echo "PY_VERSION: $PY_VERSION"
           PY_VERSION=${PY_VERSION//./}
           echo "PY_VERSION without dots: $PY_VERSION"
           docker run --rm -e PY_VERSION="$PY_VERSION" -e PLAT="$PLAT" \
             -v ${{ github.workspace }}:/work \
             -w /work "$DOCKER_IMAGE" \
             bash -c "
               set -e
               yum install -y git sudo wget
               git config --global --add safe.directory /work
               ls -alh /opt/python
               echo \"PY_VERSION: \$PY_VERSION\"
               ls /opt/python/cp\${PY_VERSION}-cp\${PY_VERSION}
               ls /opt/python/cp\${PY_VERSION}-cp\${PY_VERSION}/bin
               export PATH=/opt/python/cp\${PY_VERSION}-cp\${PY_VERSION}/bin:\$PATH
               echo \"PATH: \$PATH\"
               echo \"Using Python from: \$(which python)\"
               echo \"Python version: \$(python -V)\"
               bash ci/run_ci.sh install_bazel
               bash ci/deploy.sh build_pyfory
             "
      - name: Upload Wheel Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pyfory-wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist/*.whl

  build-wheels-macos_and_windows:
    name: Build Wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", 3.11, 3.12, 3.13]
        os: [macos-13, macos-14, windows-2022]  # macos-13: x86, macos-14: arm64
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install bazel (for macOS and Windows)
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
              ./ci/run_ci.sh install_bazel_windows
          else
              ./ci/run_ci.sh install_bazel
          fi
      - name: Update version in setup.py
        shell: bash
        run: ci/deploy.sh bump_py_version
      - name: Build a binary wheel (native)
        shell: bash
        run: |
           ci/deploy.sh build_pyfory
      - name: Upload Wheel Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pyfory-wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist/*.whl

  publish-wheels:
    name: Publish Wheels
    runs-on: ubuntu-latest
    needs:
      - build-wheels-linux
      - build-wheels-macos_and_windows
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Download Wheel Artifacts
        uses: actions/download-artifact@v4
        with:
          path: downloaded_wheels/
          merge-multiple: true
      - name: Display structure of downloaded files
        run: ls -R downloaded_wheels
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: ${{ startsWith(github.ref, 'refs/tags/') && contains(github.ref, '-') }}
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          verbose: true
          verify-metadata: false
          packages-dir: downloaded_wheels
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: ${{ startsWith(github.ref, 'refs/tags/') && !contains(github.ref, '-') }}
        with:
          skip-existing: true
          verify-metadata: false
          packages-dir: downloaded_wheels
